digraph finite_state_machine {
	rankdir=TB size="8,5"
	node [shape=doublecircle]
	program
	node [shape=circle]
	program -> class
	program -> Program
	program -> "{"
	program -> declaration
	declaration -> varDeclaration
	varDeclaration -> varType
	varType -> int
	varDeclaration -> colores
	varDeclaration -> ";"
	program -> declaration
	declaration -> varDeclaration
	varDeclaration -> varType
	varType -> int
	varDeclaration -> prueba
	varDeclaration -> ";"
	program -> declaration
	declaration -> varDeclaration
	varDeclaration -> varType
	varType -> int
	varDeclaration -> rosas
	varDeclaration -> ";"
	program -> declaration
	declaration -> varDeclaration
	varDeclaration -> varType
	varType -> int
	varDeclaration -> s
	varDeclaration -> "["
	varDeclaration -> rosas
	varDeclaration -> "]"
	varDeclaration -> ";"
	program -> declaration
	declaration -> varDeclaration
	varDeclaration -> varType
	varType -> int
	varDeclaration -> sdf
	varDeclaration -> "["
	varDeclaration -> 5
	varDeclaration -> "]"
	varDeclaration -> ";"
	program -> declaration
	declaration -> varDeclaration
	varDeclaration -> varType
	varType -> int
	varDeclaration -> rosas
	varDeclaration -> ";"
	program -> declaration
	declaration -> structDeclaration
	varDeclaration -> struct
	varDeclaration -> s
	varDeclaration -> "{"
	varDeclaration -> varDeclaration
	varType -> varType
	declaration -> int
	varType -> s
	varType -> ";"
	varDeclaration -> varDeclaration
	varType -> varType
	declaration -> int
	varType -> rosas
	varType -> ";"
	varDeclaration -> "}"
	program -> declaration
	declaration -> methodDeclaration
	varDeclaration -> int
	varDeclaration -> func
	varDeclaration -> "("
	varDeclaration -> parameter
	varType -> parameterType
	declaration -> int
	varType -> sol
	varDeclaration -> ","
	varDeclaration -> parameter
	varType -> parameterType
	declaration -> char
	varType -> unico
	varDeclaration -> ")"
	varDeclaration -> block
	varType -> "{"
	varType -> varDeclaration
	declaration -> varType
	varDeclaration -> int
	declaration -> rosas
	declaration -> ";"
	varType -> statement
	declaration -> location
	varDeclaration -> rosas
	declaration -> "="
	declaration -> expression
	varDeclaration -> 4
	declaration -> ";"
	varType -> statement
	declaration -> return
	declaration -> expression
	varDeclaration -> location
	varType -> rosas
	declaration -> ";"
	varType -> "}"
	program -> declaration
	declaration -> methodDeclaration
	varDeclaration -> int
	varDeclaration -> main
	varDeclaration -> "("
	varDeclaration -> ")"
	varDeclaration -> block
	varType -> "{"
	varType -> varDeclaration
	declaration -> varType
	varDeclaration -> char
	declaration -> c
	declaration -> ";"
	varType -> statement
	declaration -> methodCall
	varDeclaration -> func
	varDeclaration -> "("
	varDeclaration -> arg
	varType -> expression
	declaration -> location
	varDeclaration -> colores
	varDeclaration -> ","
	varDeclaration -> arg
	varType -> expression
	declaration -> location
	varDeclaration -> c
	varDeclaration -> ")"
	declaration -> ";"
	varType -> statement
	declaration -> methodCall
	varDeclaration -> func
	varDeclaration -> "("
	varDeclaration -> arg
	varType -> expression
	declaration -> location
	varDeclaration -> c
	varDeclaration -> ","
	varDeclaration -> arg
	varType -> expression
	declaration -> location
	varDeclaration -> c
	varDeclaration -> ")"
	declaration -> ";"
	varType -> statement
	declaration -> return
	declaration -> expression
	varDeclaration -> expression
	varType -> expression
	declaration -> expression
	varDeclaration -> 3
	declaration -> arith_op
	varDeclaration -> "+"
	declaration -> expression
	varDeclaration -> 5
	varType -> arith_op
	declaration -> "*"
	varType -> expression
	declaration -> 3
	varDeclaration -> arith_op
	varType -> "+"
	varDeclaration -> expression
	varType -> 5
	declaration -> ";"
	varType -> "}"
	program -> "}"
}
